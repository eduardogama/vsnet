[General]
network = scenario2


# tcp general settings
**.tcp.advertisedWindow = 65535                      # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = false                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.recordStats = true                            # recording of seqNum etc. into output vectors enabled/disabled

# NIC configuration
**.ppp[*].queue.typename = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 100  # in routers


# Channel settings
#**.C2_ber = ${c1ber = 1e-5, 1e-7}
#**.C1_ber = ${c2ber = 1e-5, 1e-7}
**.C2_ber = ${c1ber = 0}
**.C1_ber = ${c2ber = 0}

repeat = 1

[Config Simple-Dash]

**.client*.numApps = 1
**.server*.numApps = 1

# TCP Apps - client
**.client*.app[*].typename = "DashClient"
**.client*.app[*].localAddress = "client1"
**.client*.app[*].connectAddress = "server1" # 192.168.0.111 = external server
**.client*.app[*].connectPort = 1000


#TCP Apps - server settings
**.server1.app[*].typename = "DashServer"
**.server1.app[*].localAddress = "server1"
**.server1.app[*].localPort = 1000


#TCP Apps - cache settings
**.server2.app[*].typename = "CacheService"
**.server2.app[*].localAddress = "server2"
**.server2.app[*].localPort = 1000
