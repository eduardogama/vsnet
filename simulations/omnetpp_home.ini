[General]

network = scenario


description = "DASH App"

total-stack = 7MiB # increase if necessary

#cmdenv-interactive=true
#cmdenv-express-mode  = true
#cmdenv-event-banners = true # for normal (non-express) mode only


#cmdenv-redirect-output = true
# cmdenv-output-file = log.txt

record-eventlog = true


#tkenv-plugin-path = ../../inet/etc/plugins

**.server.numPcapRecorders = 0
**.server.pcapRecorder[0].pcapFile = "results/server.pcap"
**.client.numPcapRecorders = 0
**.client.pcapRecorder[0].pcapFile = "results/client1.pcap"

#
# Network specific settings
#

# Configurator settings
#*.configurator.dumpAddresses = true
#*.configurator.dumpTopology = true
#*.configurator.dumpLinks = true
#*.configurator.dumpRoutes = true

# Routing settings
*.*.ipv4.arp.typename = "GlobalArp"
*.*.ipv4.routingTable.netmaskRoutes = ""

# Wireless settings
#*.*.wlan[*].bitrate = 54Mbps

[Config dash1]

#**.tcp.typename = "Tcp"
**.numApps = 1

# TCP Apps - client
**.client.app[*].typename = "DASHApp"
**.client.app[*].localAddress = "client"
#**.client.app[*].localPort = -1
**.client.app[*].connectAddress = "server" # 192.168.0.111 = external server
**.client.app[*].connectPort = 1000
#**.client.app[*].dataTransferMode = "object"


#TCP Apps - server settings
#**.server.app[*].typename = "TcpGenericServerApp"
**.server.app[*].typename = "DashServer"
**.server.app[*].localAddress = "server"
**.server.app[*].localPort = 1000


# NIC configuration
**.ppp[*].queue.typename = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10  # in routers

*.configurator.config=xml("<config><interface hosts='*' address='192.168.1.x' netmask='255.255.255.0'/></config>")

# tcp general settings
**.tcp.advertisedWindow = 65535                      # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = false                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.recordStats = true    

# TCP Apps - client
#**.client.numApps = 1
#**.client.app[*].typename = "DASHApp"
#
#**.client.app[*].localAddress = "172.0.0.1"
#**.client.app[*].localPort = 1000
#**.client.app[*].connectAddress = "192.168.0.111" # 192.168.0.111 = external server
#**.client.app[*].connectPort = 10021
#
#**.client.app[*].resultFile = "results/results.wav"
#
#**.server.numApps = 1
#**.server.app[*].typename = "TCPAdaptiveVideoClientApp"
#**.server.app[0].packetTimeLength = 20ms
#**.server.app[0].voipHeaderSize = 4B
#**.server.app[0].samplingRate = 8000Hz
#**.server.app[0].compressedBitRate = 40000bps
#**.server.app[0].voipSilenceThreshold = 100
#**.server.app[0].repeatCount = 1
#**.server.app[0].traceFileName = "results/VoIPtrace.wav"
#
#**.server.app[0].soundFile = "../../soundFiles/husten.mp3"
#
#**.server.app[0].localPort = 1000
#**.server.app[0].destPort = 1000
#**.server.app[0].srcAddress = ""
#**.server.app[0].destAddress = "client"
